diff --git a/web/assets/js/RepLogApp.js b/web/assets/js/RepLogApp.js
index 9c464cba..c5fee468 100644
--- a/web/assets/js/RepLogApp.js
+++ b/web/assets/js/RepLogApp.js
@@ -1,5 +1,7 @@
 'use strict';
 
+const Helper = require('./RepLogAppHelper');
+
 (function(window, $, Routing, swal) {
 
     let HelperInstances = new WeakMap();
@@ -194,37 +196,6 @@
         }
     }
 
-    class Helper {
-        constructor(repLogs) {
-            this.repLogs = repLogs;
-        }
-
-        calculateTotalWeight() {
-            return Helper._calculateWeights(
-                this.repLogs
-            );
-        }
-
-        getTotalWeightString(maxWeight = 500) {
-            let weight = this.calculateTotalWeight();
-
-            if (weight > maxWeight) {
-                weight = maxWeight + '+';
-            }
-
-            return weight + ' lbs';
-        }
-
-        static _calculateWeights(repLogs) {
-            let totalWeight = 0;
-            for (let repLog of repLogs) {
-                totalWeight += repLog.totalWeightLifted;
-            }
-
-            return totalWeight;
-        }
-    }
-
     const rowTemplate = (repLog) => `
 <tr data-weight="${repLog.totalWeightLifted}">
     <td>${repLog.itemLabel}</td>
diff --git a/web/assets/js/RepLogAppHelper.js b/web/assets/js/RepLogAppHelper.js
new file mode 100644
index 00000000..29d75689
--- /dev/null
+++ b/web/assets/js/RepLogAppHelper.js
@@ -0,0 +1,30 @@
+module.exports = class Helper {
+    constructor(repLogs) {
+        this.repLogs = repLogs;
+    }
+
+    calculateTotalWeight() {
+        return Helper._calculateWeights(
+            this.repLogs
+        );
+    }
+
+    getTotalWeightString(maxWeight = 500) {
+        let weight = this.calculateTotalWeight();
+
+        if (weight > maxWeight) {
+            weight = maxWeight + '+';
+        }
+
+        return weight + ' lbs';
+    }
+
+    static _calculateWeights(repLogs) {
+        let totalWeight = 0;
+        for (let repLog of repLogs) {
+            totalWeight += repLog.totalWeightLifted;
+        }
+
+        return totalWeight;
+    }
+};
